template <bool BATCHED, bool STRIDED, typename T, typename U, typename V>
rocblas_status rocblas_gemm_template(rocblas_handle    handle,
                                     rocblas_operation trans_a,
                                     rocblas_operation trans_b,
                                     rocblas_int       m,
                                     rocblas_int       n,
                                     rocblas_int       k,
                                     const T*          alpha,
                                     const U*          A,
                                     rocblas_int       offset_a,
                                     rocblas_int       ld_a,
                                     rocblas_stride    stride_a,
                                     const U*          B,
                                     rocblas_int       offset_b,
                                     rocblas_int       ld_b,
                                     rocblas_stride    stride_b,
                                     const T*          beta,
                                     V*                C,
                                     rocblas_int       offset_c,
                                     rocblas_int       ld_c,
                                     rocblas_stride    stride_c,
                                     rocblas_int       batch_count);

//////////////////////////////
//////////////////////////////
//////////////////////////////
template <rocblas_int BLOCK, bool BATCHED, typename T, typename U, typename V>
rocblas_status rocblas_trsm_template(rocblas_handle    handle,
                                     rocblas_side      side,
                                     rocblas_fill      uplo,
                                     rocblas_operation transA,
                                     rocblas_diagonal  diag,
                                     rocblas_int       m,
                                     rocblas_int       n,
                                     const T*          alpha,
                                     U                 A,
                                     rocblas_int       offset_A,
                                     rocblas_int       lda,
                                     rocblas_stride    stride_A,
                                     V                 B,
                                     rocblas_int       offset_B,
                                     rocblas_int       ldb,
                                     rocblas_stride    stride_B,
                                     rocblas_int       batch_count,
                                     bool              optimal_mem,
                                     void*             x_temp,
                                     void*             x_temparr,
                                     void*             invA               = nullptr,
                                     void*             invAarr            = nullptr,
                                     U                 supplied_invA      = nullptr,
                                     rocblas_int       supplied_invA_size = 0,
                                     rocblas_int       offset_invA        = 0,
                                     rocblas_stride    stride_invA        = 0);

template <typename T, typename U, typename V, typename W>
rocblas_status rocblas_ger_template(rocblas_handle handle,
                                    rocblas_int    m,
                                    rocblas_int    n,
                                    const W*       alpha,
                                    rocblas_stride stride_alpha,
                                    const U*       x,
                                    rocblas_int    offsetx,
                                    rocblas_int    incx,
                                    rocblas_int    stridex,
                                    const U*       y,
                                    rocblas_int    offsety,
                                    rocblas_int    incy,
                                    rocblas_int    stridey,
                                    V*             A,
                                    rocblas_int    offsetA,
                                    rocblas_int    lda,
                                    rocblas_int    strideA,
                                    rocblas_int    batch_count);

template <rocblas_int NB, typename T, typename S>
rocblas_status rocblas_iamax_template(rocblas_handle handle,
                                      rocblas_int    n,
                                      const T*       x,
                                      rocblas_int    shiftx,
                                      rocblas_int    incx,
                                      rocblas_int*   result,
                                      void*          work);

template <rocblas_int NB, typename T, typename U, typename V>
rocblas_status rocblas_scal_template(rocblas_handle handle,
                                     rocblas_int    n,
                                     const V*       alpha,
                                     rocblas_stride stride_alpha,
                                     U              x,
                                     rocblas_int    offsetx,
                                     rocblas_int    incx,
                                     rocblas_stride stridex,
                                     rocblas_int    batch_count);

template <rocblas_int NB, typename U>
rocblas_status rocblas_swap_template(rocblas_handle handle,
                                     rocblas_int    n,
                                     U              x,
                                     rocblas_int    offsetx,
                                     rocblas_int    incx,
                                     rocblas_stride stridex,
                                     U              y,
                                     rocblas_int    offsety,
                                     rocblas_int    incy,
                                     rocblas_stride stridey,
                                     rocblas_int    batch_count = 1);
